[device "cgm"]
vendor = openaps.vendors.dexcom
extra = cgm.ini

[device "oref0"]
vendor = openaps.vendors.process
extra = oref0.ini

[device "get-profile"]
vendor = openaps.vendors.process
extra = get-profile.ini

[device "calculate-iob"]
vendor = openaps.vendors.process
extra = calculate-iob.ini

[device "determine-basal"]
vendor = openaps.vendors.process
extra = determine-basal.ini

[report "settings/settings.json"]
device = pump
use = read_settings
reporter = JSON

[report "settings/bg_targets.json"]
device = pump
use = read_bg_targets
reporter = JSON

[report "settings/insulin_sensitivities.json"]
device = pump
use = read_insulin_sensitivies
reporter = JSON

[device "curl"]
fields = 
cmd = bash
vendor = openaps.vendors.process
args = -c "curl -s https://marans.herokuapp.com/api/v1/entries.json | json -e 'this.glucose = this.sgv'"

[report "settings/basal_profile.json"]
device = pump
use = read_basal_profile_std
reporter = JSON

[report "settings/profile.json"]
use = shell
bg_targets = settings/bg_targets.json
settings = settings/settings.json
basal_profile = settings/basal_profile.json
reporter = text
json_default = True
max_iob = max_iob.json
device = get-profile
remainder = []
insulin_sensitivities = settings/insulin_sensitivities.json

[alias]
gather-profile = report invoke settings/settings.json settings/bg_targets.json settings/insulin_sensitivities.json settings/basal_profile.json settings/profile.json settings/model.json
monitor-pump = report invoke monitor/clock.json monitor/temp_basal.json monitor/pumphistory.json monitor/iob.json monitor/battery.json monitor/reservoir.json monitor/clock-zoned.json monitor/status.json monitor/pumphistory-zoned.json
monitor-cgm = report invoke monitor/glucose.json
gather = ! bash -c "rm -f monitor/*; openaps gather-profile && openaps monitor-cgm && openaps monitor-pump && openaps report invoke monitor/iob.json"
last_four_hours = report invoke last_four_pump_hours.json last_four_cgm_hours.json
preflight = ! bash -c "echo -n \"mmtune: \" && openaps use pump mmtune && echo -n \"PREFLIGHT \" && openaps report invoke monitor/clock.json 2>/dev/null >/dev/null && echo OK || ( echo FAIL; sleep 120; exit 1 )"
enact = ! bash -c "rm -f enact/*; openaps report invoke enact/suggested.json &&  openaps report invoke enact/enacted.json"
loop = ! bash -c "openaps monitor-cgm 2>/dev/null && ( openaps preflight && openaps gather && openaps enact && openaps status-upload && openaps upload-recent-treatments) || echo No CGM data."
retry-loop = ! bash -c "openaps preflight && until( openaps loop); do sleep 5; done"
status-upload = ! bash -c "openaps report invoke monitor/upload-status.json && ns-upload $NIGHTSCOUT_HOST $API_SECRET devicestatus.json monitor/upload-status.json"
latest-ns-treatment-time = ! bash -c "nightscout latest-openaps-treatment $NIGHTSCOUT_HOST | json created_at"
format-latest-nightscout-treatments = ! bash -c "nightscout cull-latest-openaps-treatments monitor/pumphistory-zoned.json settings/model.json $(openaps latest-ns-treatment-time) > upload/latest-treatments.json"
upload-recent-treatments = ! bash -c "openaps format-latest-nightscout-treatments && test $(json -f upload/latest-treatments.json -a created_at eventType | wc -l ) -gt 0 && (ns-upload $NIGHTSCOUT_HOST $API_SECRET treatments.json upload/latest-treatments.json ) || echo \"No recent treatments to upload\""

[report "monitor/pumphistory.json"]
device = pump
hours = 4.0
use = iter_pump_hours
reporter = JSON

[report "monitor/clock.json"]
device = pump
use = read_clock
reporter = JSON

[report "monitor/iob.json"]
profile = settings/profile.json
use = shell
reporter = JSON
clock = monitor/clock.json
json_default = True
pumphistory = monitor/pumphistory.json
device = calculate-iob
remainder = []

[report "monitor/temp_basal.json"]
device = pump
use = read_temp_basal
reporter = JSON

[report "monitor/glucose.json"]
device = curl
use = shell
reporter = text

[report "enact/suggested.json"]
profile = settings/profile.json
use = shell
temp_basal = monitor/temp_basal.json
reporter = text
json_default = True
device = determine-basal
remainder = []
iob = monitor/iob.json
glucose = monitor/glucose.json

[report "last_four_pump_hours.json"]
device = pump
hours = 4.0
use = iter_pump_hours
reporter = JSON

[report "last_four_cgm_hours.json"]
device = cgm
hours = 4.0
use = iter_glucose_hours
reporter = JSON

[report "enact/enacted.json"]
device = pump
input = enact/suggested.json
use = set_temp_basal
reporter = JSON

[device "ns-status"]
vendor = openaps.vendors.process
extra = ns-status.ini

[report "monitor/upload-status.json"]
suggested = enact/suggested.json
status = monitor/status.json
use = shell
reservoir = monitor/reservoir.json
reporter = JSON
battery = monitor/battery.json
clock = monitor/clock-zoned.json
json_default = True
device = ns-status
remainder = []
iob = monitor/iob.json
enacted = enact/enacted.json

[vendor "openapscontrib.timezones"]
path = .
module = openapscontrib.timezones

[device "tz"]
vendor = openapscontrib.timezones
extra = tz.ini

[report "monitor/clock-zoned.json"]
use = clock
reporter = JSON
astimezone = False
date = None
adjust = missing
input = monitor/clock.json
device = tz
timezone = CDT

[report "monitor/reservoir.json"]
device = pump
use = reservoir
reporter = JSON

[report "monitor/battery.json"]
device = pump
use = read_battery_status
reporter = JSON

[report "monitor/status.json"]
device = pump
use = status
reporter = JSON

[report "monitor/pumphistory-zoned.json"]
use = rezone
reporter = JSON
astimezone = False
date = timestamp dateString start_at end_at created_at
adjust = missing
input = monitor/pumphistory.json
device = tz
timezone = CDT

[report "settings/model.json"]
device = pump
use = model
reporter = JSON

[vendor "mmeowlink.vendors.mmeowlink"]
path = .
module = mmeowlink.vendors.mmeowlink

[device "pump"]
vendor = mmeowlink.vendors.mmeowlink
extra = pump.ini

[report "settings/carb_ratios.json"]
device = pump
use = read_carb_ratios
reporter = JSON

